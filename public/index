<!doctype html>
<html lang="en">
<head>
<meta charset="utf-8" />
<title>Grapevine YouTube (No-Key)</title>
<meta name="viewport" content="width=device-width,initial-scale=1" />
<style>
  * { box-sizing: border-box; }
  body { margin:0; font-family:Inter, Arial, sans-serif; background:#4d0063; color:#fff; }
  .wrap { max-width:1000px; margin:28px auto; padding:18px; }
  h1 { text-align:center; color:#fff; }
  .controls { display:flex; gap:10px; justify-content:center; flex-wrap:wrap; margin-bottom:12px }
  input[type="text"] { padding:10px; border-radius:8px; border:1px solid #4d0063; background:#250038; color:#fff; min-width:320px }
  button { padding:10px 14px; border-radius:8px; border:none; background:#794397; color:#fff; cursor:pointer }
  button:hover { background:#760086 }
  .meta { color:#d9c9f0; font-size:13px; margin-top:6px }
  .grid { display:grid; grid-template-columns:repeat(auto-fill,minmax(240px,1fr)); gap:12px; margin-top:18px }
  .card { background:#250038; border:1px solid #4d0063; border-radius:10px; overflow:hidden; padding:8px }
  .card img { width:100%; height:140px; object-fit:cover; border-radius:8px }
  .card h3 { margin:8px 0 4px 0; font-size:15px; color:#fff }
  .card .sub { font-size:12px; color:#d9c9f0; margin-bottom:8px }
  .card .actions { display:flex; gap:8px; align-items:center }
  .card iframe { width:100%; height:200px; border:0; border-radius:8px }
  .status { text-align:center; color:#e6d9ff; margin-top:6px }
</style>
</head>
<body>
  <div class="wrap">
    <h1>ðŸŽ¥ Grapevine YouTube (No-Key)</h1>

    <div class="controls">
      <input id="q" type="text" placeholder="Search YouTube (no API key required)">
      <button id="btn">Search</button>
      <label style="display:flex;align-items:center;gap:8px"><input id="safe" type="checkbox" checked> SafeSearch</label>
    </div>

    <div id="status" class="status"></div>
    <div id="results" class="grid"></div>
  </div>

<script>
  const btn = document.getElementById('btn');
  const qEl = document.getElementById('q');
  const resultsEl = document.getElementById('results');
  const statusEl = document.getElementById('status');
  const safeEl = document.getElementById('safe');

  btn.addEventListener('click', () => doSearch(1));
  qEl.addEventListener('keydown', e => { if (e.key === 'Enter') doSearch(1); });

  async function doSearch(page = 1) {
    const q = qEl.value.trim();
    if (!q) { statusEl.textContent = 'Enter a search term.'; return; }
    statusEl.textContent = 'Searching...';
    resultsEl.innerHTML = '';

    try {
      const safe = safeEl.checked;
      const res = await fetch(`/api/search?q=${encodeURIComponent(q)}&max=20&safe=${safe}`);
      if (!res.ok) {
        statusEl.textContent = 'Search failed: ' + (await res.text());
        return;
      }
      const json = await res.json();
      if (!json.results || json.results.length === 0) {
        statusEl.textContent = 'No results.';
        return;
      }
      statusEl.textContent = `Showing ${json.count} results for "${json.query}"`;
      json.results.forEach(v => {
        const card = document.createElement('div');
        card.className = 'card';
        card.innerHTML = `
          ${v.thumbnail ? `<img src="${escapeHtml(v.thumbnail)}" loading="lazy">` : ''}
          <h3>${escapeHtml(v.title)}</h3>
          <div class="sub">${escapeHtml(v.channel || '')} ${v.length ? ' â€¢ ' + escapeHtml(v.length) : ''}</div>
          <div class="actions">
            <button class="embed">Embed</button>
            <a class="watch" href="${escapeHtml(v.watch)}" target="_blank" style="color:#a38eb1;text-decoration:none">Watch on YouTube</a>
          </div>
        `;
        card.querySelector('.embed').addEventListener('click', () => {
          card.querySelector('.actions').remove();
          const iframe = document.createElement('iframe');
          iframe.src = v.embed + '?rel=0&modestbranding=1';
          iframe.allow = 'accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture';
          card.appendChild(iframe);
        });
        resultsEl.appendChild(card);
      });
    } catch (err) {
      statusEl.textContent = 'Error: ' + err.message;
      console.error(err);
    }
  }

  function escapeHtml (s) {
    return (s||'').toString().replace(/[&<>"'`=\/]/g, function (c) {
      return ({ '&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;', "'":'&#39;','/':'&#x2F;','`':'&#x60;','=':'&#x3D;'}[c]);
    });
  }
</script>
</body>
</html>
